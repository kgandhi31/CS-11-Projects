/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_3QuizProgram;

/**
 *
 * @author Krish
 */
public class Quiz extends javax.swing.JFrame {

    /**
     * Creates new form Quiz
     */
    public Quiz() {
        initComponents();
        question2Pannel.setVisible(false);
        question3Pannel.setVisible(false);
        question4Pannel.setVisible(false);
        submitPannel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Qest1ButtonGroup = new javax.swing.ButtonGroup();
        backgroundPannel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        question1Pannel = new javax.swing.JPanel();
        question1Label = new javax.swing.JLabel();
        tableSaltPic = new javax.swing.JLabel();
        Quest1aRadioButton = new javax.swing.JRadioButton();
        Quest1bRadioButton = new javax.swing.JRadioButton();
        Quest1cRadioButton = new javax.swing.JRadioButton();
        Quest1dRadioButton = new javax.swing.JRadioButton();
        Quest1NextButton = new javax.swing.JButton();
        header1Label = new javax.swing.JLabel();
        question2Pannel = new javax.swing.JPanel();
        question2Label = new javax.swing.JLabel();
        Quest2NextButton = new javax.swing.JButton();
        Quest2ComboBox = new javax.swing.JComboBox<>();
        icedwaterLabel = new javax.swing.JLabel();
        question3Pannel = new javax.swing.JPanel();
        question3Label = new javax.swing.JLabel();
        Quest3NextButton = new javax.swing.JButton();
        milkPic = new javax.swing.JLabel();
        Quest3Slider = new javax.swing.JSlider();
        Quest3aLabel = new javax.swing.JLabel();
        Quest3bLabel = new javax.swing.JLabel();
        Quest3cLabel = new javax.swing.JLabel();
        Quest3dLabel = new javax.swing.JLabel();
        Quest3eLabel = new javax.swing.JLabel();
        question4Pannel = new javax.swing.JPanel();
        question4Label = new javax.swing.JLabel();
        kmtPic = new javax.swing.JLabel();
        Quest4aTCheckBox = new javax.swing.JCheckBox();
        Quest4cFCheckBox = new javax.swing.JCheckBox();
        Quest4bTCheckBox = new javax.swing.JCheckBox();
        Quest4dFCheckBox = new javax.swing.JCheckBox();
        Quest4eFCheckBox = new javax.swing.JCheckBox();
        submitPannel = new javax.swing.JPanel();
        SubmitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chemistry Quiz");
        setBackground(new java.awt.Color(0, 204, 255));

        backgroundPannel.setBackground(new java.awt.Color(51, 153, 255));

        titleLabel.setFont(new java.awt.Font("Felix Titling", 1, 24)); // NOI18N
        titleLabel.setText("Chemistry Quiz");

        question1Pannel.setBackground(new java.awt.Color(255, 51, 51));

        question1Label.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        question1Label.setText("1. One of the essential minerals in the human body is salt. How much salt (NaCl) is in the average adult human body?");

        tableSaltPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI_3QuizProgram/tableSalt.jpg"))); // NOI18N

        Qest1ButtonGroup.add(Quest1aRadioButton);
        Quest1aRadioButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest1aRadioButton.setText("1 kilogram");

        Qest1ButtonGroup.add(Quest1bRadioButton);
        Quest1bRadioButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest1bRadioButton.setText("500 grams");

        Qest1ButtonGroup.add(Quest1cRadioButton);
        Quest1cRadioButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest1cRadioButton.setText("250 grams");

        Qest1ButtonGroup.add(Quest1dRadioButton);
        Quest1dRadioButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest1dRadioButton.setText("practically none");

        Quest1NextButton.setBackground(new java.awt.Color(255, 255, 0));
        Quest1NextButton.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        Quest1NextButton.setText("Next Question");
        Quest1NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest1NextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question1PannelLayout = new javax.swing.GroupLayout(question1Pannel);
        question1Pannel.setLayout(question1PannelLayout);
        question1PannelLayout.setHorizontalGroup(
            question1PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question1PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question1Label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(question1PannelLayout.createSequentialGroup()
                .addGroup(question1PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(question1PannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Quest1aRadioButton)
                        .addGap(75, 75, 75)
                        .addComponent(Quest1bRadioButton)
                        .addGap(75, 75, 75)
                        .addComponent(Quest1cRadioButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, question1PannelLayout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(tableSaltPic)))
                .addGap(70, 70, 70)
                .addComponent(Quest1dRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Quest1NextButton)
                .addContainerGap())
        );
        question1PannelLayout.setVerticalGroup(
            question1PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question1PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question1Label)
                .addGroup(question1PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question1PannelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tableSaltPic)
                        .addGap(18, 18, 18)
                        .addGroup(question1PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Quest1aRadioButton)
                            .addComponent(Quest1bRadioButton)
                            .addComponent(Quest1cRadioButton)
                            .addComponent(Quest1dRadioButton))
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, question1PannelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Quest1NextButton)
                        .addContainerGap())))
        );

        header1Label.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 16)); // NOI18N
        header1Label.setText("Answer the following questions to the best of your ability. Press the next button to move to the next question and make sure to submit your answers at the end. Good luck!");

        question2Pannel.setBackground(new java.awt.Color(51, 204, 0));

        question2Label.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        question2Label.setText("2. If you fill a glass to the brim with ice water and the ice melts, what will happen?");

        Quest2NextButton.setBackground(new java.awt.Color(255, 255, 0));
        Quest2NextButton.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        Quest2NextButton.setText("Next Question");
        Quest2NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest2NextButtonActionPerformed(evt);
            }
        });

        Quest2ComboBox.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest2ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "The glass will over flow as the ice turns to water.", "The level of water in the glass will remain unchanged as the ice melts. ", "The water level will drop slightly as the ice melts. ", "I'll never find out because I'll drink the water or walk away before anything happens. " }));
        Quest2ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest2ComboBoxActionPerformed(evt);
            }
        });

        icedwaterLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI_3QuizProgram/icewater.jpg"))); // NOI18N

        javax.swing.GroupLayout question2PannelLayout = new javax.swing.GroupLayout(question2Pannel);
        question2Pannel.setLayout(question2PannelLayout);
        question2PannelLayout.setHorizontalGroup(
            question2PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question2PannelLayout.createSequentialGroup()
                .addGroup(question2PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question2PannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(question2Label))
                    .addGroup(question2PannelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Quest2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(icedwaterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Quest2NextButton)
                .addContainerGap())
        );
        question2PannelLayout.setVerticalGroup(
            question2PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question2PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(question2PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Quest2NextButton)
                    .addGroup(question2PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(icedwaterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(question2PannelLayout.createSequentialGroup()
                            .addComponent(question2Label)
                            .addGap(18, 18, 18)
                            .addComponent(Quest2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        question3Pannel.setBackground(new java.awt.Color(255, 51, 255));

        question3Label.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        question3Label.setText("3. Water-based liquids can be described as acidic, neutral, or basic, with respect to pH. Which of these describes milk?");

        Quest3NextButton.setBackground(new java.awt.Color(255, 255, 0));
        Quest3NextButton.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        Quest3NextButton.setText("Next Question");
        Quest3NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest3NextButtonActionPerformed(evt);
            }
        });

        milkPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI_3QuizProgram/milk.jpg"))); // NOI18N

        Quest3Slider.setMajorTickSpacing(1);
        Quest3Slider.setMaximum(5);
        Quest3Slider.setMinimum(1);
        Quest3Slider.setValue(3);

        Quest3aLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest3aLabel.setText("Strong Acid");

        Quest3bLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest3bLabel.setText("Slightly Acidic");

        Quest3cLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest3cLabel.setText("Neutral");

        Quest3dLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest3dLabel.setText("Slightly Basic");

        Quest3eLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest3eLabel.setText("Strong Base");

        javax.swing.GroupLayout question3PannelLayout = new javax.swing.GroupLayout(question3Pannel);
        question3Pannel.setLayout(question3PannelLayout);
        question3PannelLayout.setHorizontalGroup(
            question3PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question3PannelLayout.createSequentialGroup()
                .addGroup(question3PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question3PannelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(Quest3Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(question3PannelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(Quest3aLabel)
                        .addGap(79, 79, 79)
                        .addComponent(Quest3bLabel)
                        .addGap(73, 73, 73)
                        .addComponent(Quest3cLabel)
                        .addGap(78, 78, 78)
                        .addComponent(Quest3dLabel)
                        .addGap(72, 72, 72)
                        .addComponent(Quest3eLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Quest3NextButton)))
                .addContainerGap())
            .addGroup(question3PannelLayout.createSequentialGroup()
                .addGroup(question3PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question3PannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(question3Label))
                    .addGroup(question3PannelLayout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(milkPic)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        question3PannelLayout.setVerticalGroup(
            question3PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(question3PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question3Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(milkPic, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Quest3Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(question3PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Quest3aLabel)
                    .addComponent(Quest3bLabel)
                    .addComponent(Quest3cLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Quest3dLabel)
                    .addComponent(Quest3eLabel)
                    .addComponent(Quest3NextButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        question4Pannel.setBackground(new java.awt.Color(255, 102, 0));

        question4Label.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        question4Label.setText("4. The Kinetic Molecular Theory of matter states (check all answer that apply):");

        kmtPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI_3QuizProgram/kmt.PNG"))); // NOI18N

        Quest4aTCheckBox.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest4aTCheckBox.setText("Gas particles do not attract or repel.");
        Quest4aTCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest4aTCheckBoxActionPerformed(evt);
            }
        });

        Quest4cFCheckBox.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest4cFCheckBox.setText("Particles always have the same size.");
        Quest4cFCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest4cFCheckBoxActionPerformed(evt);
            }
        });

        Quest4bTCheckBox.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest4bTCheckBox.setText("No kinetic energy is lost when gas particles collide.");
        Quest4bTCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest4bTCheckBoxActionPerformed(evt);
            }
        });

        Quest4dFCheckBox.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest4dFCheckBox.setText("Heavier particles move slower than lighter particles.");
        Quest4dFCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest4dFCheckBoxActionPerformed(evt);
            }
        });

        Quest4eFCheckBox.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Quest4eFCheckBox.setText(" The average kinetic energy of a gas molecule is independent of the temperature.");
        Quest4eFCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quest4eFCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout question4PannelLayout = new javax.swing.GroupLayout(question4Pannel);
        question4Pannel.setLayout(question4PannelLayout);
        question4PannelLayout.setHorizontalGroup(
            question4PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question4PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question4Label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(question4PannelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(question4PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quest4eFCheckBox)
                    .addGroup(question4PannelLayout.createSequentialGroup()
                        .addGroup(question4PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Quest4aTCheckBox)
                            .addComponent(Quest4cFCheckBox))
                        .addGap(28, 28, 28)
                        .addGroup(question4PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Quest4dFCheckBox)
                            .addComponent(Quest4bTCheckBox))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kmtPic, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        question4PannelLayout.setVerticalGroup(
            question4PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(question4PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question4Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(question4PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(question4PannelLayout.createSequentialGroup()
                        .addGroup(question4PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Quest4aTCheckBox)
                            .addComponent(Quest4bTCheckBox))
                        .addGap(18, 18, 18)
                        .addGroup(question4PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Quest4cFCheckBox)
                            .addComponent(Quest4dFCheckBox))
                        .addGap(18, 18, 18)
                        .addComponent(Quest4eFCheckBox))
                    .addComponent(kmtPic, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        submitPannel.setBackground(new java.awt.Color(204, 204, 204));

        SubmitButton.setBackground(new java.awt.Color(0, 255, 0));
        SubmitButton.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        SubmitButton.setText("Submit Quiz");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        resultArea.setColumns(20);
        resultArea.setRows(5);
        jScrollPane1.setViewportView(resultArea);

        javax.swing.GroupLayout submitPannelLayout = new javax.swing.GroupLayout(submitPannel);
        submitPannel.setLayout(submitPannelLayout);
        submitPannelLayout.setHorizontalGroup(
            submitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitPannelLayout.createSequentialGroup()
                .addGroup(submitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(submitPannelLayout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(SubmitButton))
                    .addGroup(submitPannelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        submitPannelLayout.setVerticalGroup(
            submitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout backgroundPannelLayout = new javax.swing.GroupLayout(backgroundPannel);
        backgroundPannel.setLayout(backgroundPannelLayout);
        backgroundPannelLayout.setHorizontalGroup(
            backgroundPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPannelLayout.createSequentialGroup()
                .addGroup(backgroundPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPannelLayout.createSequentialGroup()
                        .addGroup(backgroundPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPannelLayout.createSequentialGroup()
                                .addGap(315, 315, 315)
                                .addComponent(titleLabel))
                            .addGroup(backgroundPannelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(header1Label)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(backgroundPannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(backgroundPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(question1Pannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(question2Pannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(question3Pannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(question4Pannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(submitPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        backgroundPannelLayout.setVerticalGroup(
            backgroundPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(19, 19, 19)
                .addComponent(header1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(question1Pannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(question2Pannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(question3Pannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question4Pannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backgroundPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backgroundPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Quest1NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest1NextButtonActionPerformed
        if (Quest1cRadioButton.isSelected()) {
            result++;
            quest1Correct = true;
        }
        question2Pannel.setVisible(true);
    }//GEN-LAST:event_Quest1NextButtonActionPerformed

    private void Quest2NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest2NextButtonActionPerformed
        if (Quest2ComboBox.getSelectedIndex() == 2) {
            result++;
            quest2Correct = true;
        }
        question3Pannel.setVisible(true);
    }//GEN-LAST:event_Quest2NextButtonActionPerformed

    private void Quest2ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest2ComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Quest2ComboBoxActionPerformed

    private void Quest3NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest3NextButtonActionPerformed
        int tempValue = Quest3Slider.getValue();
        if (tempValue == 2) {
            result++;
            quest3Correct = true;
        }
        question4Pannel.setVisible(true);
        submitPannel.setVisible(true);
    }//GEN-LAST:event_Quest3NextButtonActionPerformed

    private void Quest4aTCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest4aTCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Quest4aTCheckBoxActionPerformed

    private void Quest4cFCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest4cFCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Quest4cFCheckBoxActionPerformed

    private void Quest4bTCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest4bTCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Quest4bTCheckBoxActionPerformed

    private void Quest4dFCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest4dFCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Quest4dFCheckBoxActionPerformed

    private void Quest4eFCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quest4eFCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Quest4eFCheckBoxActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        if (Quest4aTCheckBox.isSelected() && Quest4bTCheckBox.isSelected()) {
            result++;
            quest4Correct = true;
        }
        resultArea.append("" + "You scored " + result + "/4.\n");
        if (quest1Correct == false){
            resultArea.append("\nAnswer #1. The average adult human body contains about 250 grams of salt.\n");
        }
        if (quest2Correct == false){
            resultArea.append("\nAnswer #2. One interesting property of water is that it achieves maximum density as a liquid, not as a solid. So, ice is less dense than \n"
                             + "water and floats. When it melts, it becomes more dense. More mass per unit volume means the level of the liquid drops slightly.\n");
        }
        if (quest3Correct == false){
            resultArea.append("\nAnswer #3. Milk is close to a neutral pH, but it's slightly acidic as a result of the lactic acid it contains.\n");
        }
        if (quest4Correct == false){
            resultArea.append("\nAnswer #4. The Kinetic Molecular Theory of matter states that:\n"
                             + "-> There is no attraction or repulsion between gas particles since the gas molecules have very weak IMFs.\n"
                             + "-> Collisions of the gas molecules with the walls of a vessel or with other gas molecules are elastic. Therefore, there is no energy lost \n"
                               + "during collisions.\n"
                             + "-> The size of gas particles depends on different factors such as the number of shells it has and how much shielding effect there is.\n"
                             + "-> Heavier particles would move slower than lighter particles at the same temperature.\n"
                             + "-> The average kinetice energy of a gas particle is directly proportional to temperature. Hence, an increase in temperature means an \n "
                             + "increase in the average kinetic energy of gas molecules.");
        }
    }//GEN-LAST:event_SubmitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Quiz().setVisible(true);
//            }
//        });
//    }
    boolean quest1Correct = false;
    boolean quest2Correct = false;
    boolean quest3Correct = false;
    boolean quest4Correct = false;
    int result = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Qest1ButtonGroup;
    private javax.swing.JButton Quest1NextButton;
    private javax.swing.JRadioButton Quest1aRadioButton;
    private javax.swing.JRadioButton Quest1bRadioButton;
    private javax.swing.JRadioButton Quest1cRadioButton;
    private javax.swing.JRadioButton Quest1dRadioButton;
    private javax.swing.JComboBox<String> Quest2ComboBox;
    private javax.swing.JButton Quest2NextButton;
    private javax.swing.JButton Quest3NextButton;
    private javax.swing.JSlider Quest3Slider;
    private javax.swing.JLabel Quest3aLabel;
    private javax.swing.JLabel Quest3bLabel;
    private javax.swing.JLabel Quest3cLabel;
    private javax.swing.JLabel Quest3dLabel;
    private javax.swing.JLabel Quest3eLabel;
    private javax.swing.JCheckBox Quest4aTCheckBox;
    private javax.swing.JCheckBox Quest4bTCheckBox;
    private javax.swing.JCheckBox Quest4cFCheckBox;
    private javax.swing.JCheckBox Quest4dFCheckBox;
    private javax.swing.JCheckBox Quest4eFCheckBox;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JPanel backgroundPannel;
    private javax.swing.JLabel header1Label;
    private javax.swing.JLabel icedwaterLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel kmtPic;
    private javax.swing.JLabel milkPic;
    private javax.swing.JLabel question1Label;
    private javax.swing.JPanel question1Pannel;
    private javax.swing.JLabel question2Label;
    private javax.swing.JPanel question2Pannel;
    private javax.swing.JLabel question3Label;
    private javax.swing.JPanel question3Pannel;
    private javax.swing.JLabel question4Label;
    private javax.swing.JPanel question4Pannel;
    private javax.swing.JTextArea resultArea;
    private javax.swing.JPanel submitPannel;
    private javax.swing.JLabel tableSaltPic;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
